df1$log_total <- log(df1$totalPay, base = exp(1)) # Total comp.
df1$age_bin <- 0
df1$age_bin <- ifelse(df1$age < 25, 1, df1$age_bin) # Below age 25
df1$age_bin <- ifelse(df1$age >= 25 & df1$age < 35, 2, df1$age_bin) # Age 25-34.
df1$age_bin <- ifelse(df1$age >= 35 & df1$age < 45, 3, df1$age_bin) # Age 35-44.
df1$age_bin <- ifelse(df1$age >= 45 & df1$age < 55, 4, df1$age_bin) # Age 45-54.
df1$age_bin <- ifelse(df1$age >= 55, 5, df1$age_bin) # Age 55+.
df1$edu_bin <- 0
df1$edu_bin <- ifelse(df1$edu == "High School", 1, df1$edu_bin)
df1$edu_bin <- ifelse(df1$edu == "College", 2, df1$edu_bin)
df1$edu_bin <- ifelse(df1$edu == "Masters", 3, df1$edu_bin)
df1$edu_bin <- ifelse(df1$edu == "PhD", 4, df1$edu_bin)
df1$grade_bin <- 0
df1$grade_bin <- ifelse(df1$jobTitle == "Driver", 1, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Warehouse Associate", 2, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Sales Associate", 3, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Marketing Associate", 4, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "IT", 5, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Graphic Designer", 6, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Software Engineer", 7, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Data Scientist", 8, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Financial Analyst", 9, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Manager", 10, df1$grade_bin)
# No controls. ("unadjusted" pay gap.)
model1 <- oaxaca(log_total ~ perfEval + age_bin + edu + dept + seniority + jobTitle | male, data = df1)
plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = FALSE)
plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = TRUE, components = c("unexplained A", "unexplained B"))
model1$twofold$variables
model1$twofold$variables[[6]][coef(unexplained A)]
model1$twofold$variables[[6]]['coef(unexplained A)']
model1$twofold$variables[[6]]
model1$twofold$variables[[6]][variables, columns]
variables <- c('Years_of_Experience','Performance_RatingGood')
columns <- c('coef(unexplained A)', 'coef(unexplained B)')
model1$twofold$variables[[6]][variables, columns]
variables <- c('(Intercept)','perfEval')
columns <- c('coef(unexplained A)', 'coef(unexplained B)')
model1$twofold$variables[[6]][variables, columns]
variables <- c('(Intercept)','perfEval', 'jobTitleFinancial Analyst')
columns <- c('coef(unexplained A)', 'coef(unexplained B)')
model1$twofold$variables[[6]][variables, columns]
variables <- c('(Intercept)',
'perfEval',
'age_bin',
'eduHigh School',
'eduMasters',
'eduPhD',
'deptEngineering',
'deptManagement',
'deptOperations',
'deptSales',
'seniority',
'jobTitleDriver',
'jobTitleFinancial Analyst',
'jobTitleGraphic Designer',
'jobTitleIT',
'jobTitleManager',
'jobTitleMarketing Associate',
'jobTitleSales Associat',
'jobTitleSoftware Engineer')
variables <- c('(Intercept)',
'perfEval',
'age_bin',
'eduHigh School',
'eduMasters',
'eduPhD',
'deptEngineering',
'deptManagement',
'deptOperations',
'deptSales',
'seniority',
'jobTitleDriver',
'jobTitleFinancial Analyst',
'jobTitleGraphic Designer',
'jobTitleIT',
'jobTitleManager',
'jobTitleMarketing Associate',
'jobTitleSales Associate',
'jobTitleSoftware Engineer',
'jobTitleWarehouse Associate')
columns <- c('coef(unexplained A)', 'coef(unexplained B)')
model1$twofold$variables[[6]][variables, columns]
model1$twofold$variables[[6]][variables, columns]
plot.oaxaca(model1)
plot.oaxaca(model1$twofold)
plot.oaxaca(model1, decomposition=twofold)
plot.oaxaca(model1, decomposition='twofold')
plot.oaxaca(model1)
plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = TRUE, components = c("unexplained A", "unexplained B"))
model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)']
plotmodel1(model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)'])
plot(model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)'])
for (i in variables):
print(i)
for (i in variables) { print(i) }
Equ <- model1$twofold$variables[[6]][for (i in variables) { i }, 'coef(unexplained A)']
Equ
for (i in variables) { i }
print(i)
Equ <- for (i in variables) { model1$twofold$variables[[6]][ i , 'coef(unexplained A)'] }
Equ
for (i in variables) { Equ <- model1$twofold$variables[[6]][ i , 'coef(unexplained A)'] }
Equ
for (i in variables) { Equ += model1$twofold$variables[[6]][ i , 'coef(unexplained A)'] }
for (i in variables) { Equ = Equ + model1$twofold$variables[[6]][ i , 'coef(unexplained A)'] }
Equ
for (i in variables) { Equ = Equ + model1$twofold$variables[[6]][ i , 'coef(unexplained B)'] }
Equ
for (i in variables) { Equ = Equ + model1$twofold$variables[[6]][ print(i) , 'coef(unexplained B)'] }
for (i in variables) { Equ = Equ + (model1$twofold$variables[[6]][ i , 'coef(unexplained B)'] * i) }
for (i in variables) { Equ = Equ + c(model1$twofold$variables[[6]][ i , 'coef(unexplained B)'], i) }
for (i in variables) { Equ = Equ + cat(model1$twofold$variables[[6]][ i , 'coef(unexplained B)'], i) }
library(jsonlite)
new_df <- toJSON(model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)']
, tidy=TRUE)
new_df
new_df <- toJSON(model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)']
, pretty = TRUE)
new_df
model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)']
new_df <- toJSON(model1$twofold$variables[[6]]['variables', 'columns']
, pretty = TRUE)
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns]
, pretty = TRUE)
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns]
, pretty = TRUE)
new_df
for (i in variables) { Equ = Equ + cat(model1$twofold$variables[[6]][ i , 'coef(unexplained B)'], i) }
for (i in variables) { Equ = Equ + c(model1$twofold$variables[[6]][ i , 'coef(unexplained B)'], i) }
for (i in variables) { Equ = Equ + c(model1$twofold$variables[[6]][ i , 'coef(unexplained A)'], i) }
new_df <- toJSON(as.list(model1$twofold$variables[[6]][variables, columns], pretty = TRUE))
new_df
new_df <- toJSON(as.list(model1$twofold$variables[[6]][variables, columns]), pretty = TRUE)
new_df
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns], pretty = TRUE)
new_df
for (i in variables) { Equ = Equ + c(model1$twofold$variables[[6]][ i , 'coef(unexplained A)'], i) }
for (i in variables) { Equ = Equ + model1$twofold$variables[[6]][ i , 'coef(unexplained A)'] }
Equ
for (i in variables) { Equ = Equ + model1$twofold$variables[[6]][ i , columns] }
Equ
model1$twofold$variables[[6]][ i , columns]
for (i in variables) { Equ = Equ + model1$twofold$variables[[6]][ i , columns] }
for (i in variables) { model1$twofold$variables[[6]][ i , columns] }
print(for (i in variables) { model1$twofold$variables[[6]][ i , columns] })
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns], pretty = TRUE, flatten=TRUE)
new_df
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns], pretty = TRUE, flatten=TRUE)
library(jsonlite)
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns], pretty = TRUE, flatten=TRUE)
new_df
library(opencpu)
devtools::install_github('stla/ocpusimplereg')
install.packages('devtools')
devtools::install_github('stla/ocpusimplereg')
opencpu$browse("library/ocpusimplereg/www")
library(opencpu)
opencpu$browse("library/ocpusimplereg/www")
#' Knit regression
#' @export
knitRegression <- function(dat, conflevel, filetype){
dat <- as.data.frame(dat)
conflevel <- conflevel/100
if(filetype=="word_document"){
filetype <- rmarkdown::word_document(reference_docx = system.file(package = "ocpusimplereg", "templates", "word-styles-reference.docx"))
}
out <- rmarkdown::render(system.file(package = "ocpusimplereg", "templates", "regression.Rmd"),
output_dir = getwd(),
intermediates_dir = getwd(),
runtime = "static",
output_format = filetype,
params = list(set_title="Regression analysis"))
return(basename(out))
}
knitRegression()
knitRegression
knitRegression(json_df1,95,"word-styles-reference.docx")
json_df1 <- toJSON(df1, pretty=TRUE)
library(jsonlite)
json_df1 <- toJSON(df1, pretty=TRUE)
knitRegression(json_df1,95,"word-styles-reference.docx")
knitRegression(df1,95,"word-styles-reference.docx")
knitRegression(df1,95,"Newest_R.R")
knitRegression(df1,"95","Newest_R.R")
knitRegression(df1,95,"Newest_R.R")
knitRegression(df1,95,"develop_model")
knitRegression(df1,95)
knitRegression(df1,95,"Word")
knitRegression(df1,95,"word_document")
knitRegression(df1,95,"word_document")
# Load R libraries we'll use.
library(stargazer)
library(broom)
library(dplyr)
library(oaxaca)
# Load employee data.
data <- read.csv("https://glassdoor.box.com/shared/static/beukjzgrsu35fqe59f7502hruribd5tt.csv")
df1 <- data.frame(data)
df1$male <- ifelse(df1$gender == "Male", 1, 0) # Male = 1, Female = 0.
df1$female <- ifelse(df1$gender == "Female", 1, 0)
df1$totalPay <- df1$basePay + df1$bonus
df1$log_total <- log(df1$totalPay, base = exp(1)) # Total comp.
df1$age_bin <- 0
df1$age_bin <- ifelse(df1$age < 25, 1, df1$age_bin) # Below age 25
df1$age_bin <- ifelse(df1$age >= 25 & df1$age < 35, 2, df1$age_bin) # Age 25-34.
df1$age_bin <- ifelse(df1$age >= 35 & df1$age < 45, 3, df1$age_bin) # Age 35-44.
df1$age_bin <- ifelse(df1$age >= 45 & df1$age < 55, 4, df1$age_bin) # Age 45-54.
df1$age_bin <- ifelse(df1$age >= 55, 5, df1$age_bin) # Age 55+.
df1$edu_bin <- 0
df1$edu_bin <- ifelse(df1$edu == "High School", 1, df1$edu_bin)
df1$edu_bin <- ifelse(df1$edu == "College", 2, df1$edu_bin)
df1$edu_bin <- ifelse(df1$edu == "Masters", 3, df1$edu_bin)
df1$edu_bin <- ifelse(df1$edu == "PhD", 4, df1$edu_bin)
df1$grade_bin <- 0
df1$grade_bin <- ifelse(df1$jobTitle == "Driver", 1, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Warehouse Associate", 2, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Sales Associate", 3, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Marketing Associate", 4, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "IT", 5, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Graphic Designer", 6, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Software Engineer", 7, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Data Scientist", 8, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Financial Analyst", 9, df1$grade_bin)
df1$grade_bin <- ifelse(df1$jobTitle == "Manager", 10, df1$grade_bin)
# No controls. ("unadjusted" pay gap.)
model1 <- oaxaca(log_total ~ perfEval + age_bin + edu + dept + seniority + jobTitle | male, data = df1)
plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = FALSE)
plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = TRUE, components = c("unexplained A", "unexplained B"))
variables <- c('(Intercept)',
'perfEval',
'age_bin',
'eduHigh School',
'eduMasters',
'eduPhD',
'deptEngineering',
'deptManagement',
'deptOperations',
'deptSales',
'seniority',
'jobTitleDriver',
'jobTitleFinancial Analyst',
'jobTitleGraphic Designer',
'jobTitleIT',
'jobTitleManager',
'jobTitleMarketing Associate',
'jobTitleSales Associate',
'jobTitleSoftware Engineer',
'jobTitleWarehouse Associate')
columns <- c('coef(unexplained A)', 'coef(unexplained B)')
model1$twofold$variables[[6]]['jobTitleWarehouse Associate', 'coef(unexplained A)']
library(jsonlite)
new_df <- toJSON(model1$twofold$variables[[6]][variables, columns], pretty = TRUE, flatten=TRUE)
print(for (i in variables) { model1$twofold$variables[[6]][ i , columns] })
new_df
coef_list <- toJSON(model1$twofold$variables[[6]][variables, columns], pretty = TRUE, flatten=TRUE)
coef_list
print(for (i in variables) { model1$twofold$variables[[6]][ i , columns] })
for (i in variables) { model1$twofold$variables[[6]][ i , columns] }
for (i in variables) { print(model1$twofold$variables[[6]][ i , columns]) }
variables
model1$twofold$variables[[6]][ i , columns]
model$twofold$variables
model$twofold$variables[[6]]
model1$twofold$variables[[6]]
library(shiny)
library(data.table)
RegData <- as.data.table(read.table("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = FALSE))
library(shiny)
library(data.table)
RegData <- as.data.table(read.table("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = FALSE))
RegData <- as.data.table(read.table("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = TRUE))
RegData <- read.table("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = TRUE)
RegData <- as.data.table(read.csv("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = TRUE))
RegData
ui <- fluidPage(
headerPanel("Compensation Analysis using Oaxaca Decomposition"),
sidebarPanel(
p("Select the inputs for the Dependent Variable"),
selectInput(inputId = "DepVar", label = "Dependent Variables", multiple = FALSE, choices = list("AvgIR", "YYYYMM", "SumCount", "AvgLTV", "AvgGFEE", "AvgRTC", "Date")),
p("Select the inputs for the Independent Variable"),
selectInput(inputId = "IndVar", label = "Independent Variables", multiple = FALSE, choices = list( "SumCount", "AvgIR", "YYYYMM", "AvgLTV", "AvgGFEE", "AvgRTC", "Date"))
),
mainPanel(
verbatimTextOutput(outputId = "RegSum"),
verbatimTextOutput(outputId = "IndPrint"),
verbatimTextOutput(outputId = "DepPrint")
#plotOutput("hist")
)
)
server <- function(input, output) {
lm1 <- reactive({lm(paste0(input$DepVar) ~ paste0(input$IndVar), data = RegData)})
output$DepPrint <- renderPrint({input$DepVar})
output$IndPrint <- renderPrint({input$IndVar})
output$RegSum <- renderPrint({summary(lm1())})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
headerPanel("Compensation Analysis using Oaxaca Decomposition"),
sidebarPanel(
p("Select the inputs for the Dependent Variable"),
selectInput(inputId = "DepVar", label = "Dependent Variables", multiple = FALSE, choices = c('(Intercept)',
'perfEval',
'age_bin',
'eduHigh School',
'eduMasters',
'eduPhD',
'deptEngineering',
'deptManagement',
'deptOperations',
'deptSales',
'seniority',
'jobTitleDriver',
'jobTitleFinancial Analyst',
'jobTitleGraphic Designer',
'jobTitleIT',
'jobTitleManager',
'jobTitleMarketing Associate',
'jobTitleSales Associate',
'jobTitleSoftware Engineer',
'jobTitleWarehouse Associate')),
p("Select the inputs for the Independent Variable"),
selectInput(inputId = "IndVar", label = "Independent Variables", multiple = FALSE, choices = list( "SumCount", "AvgIR", "YYYYMM", "AvgLTV", "AvgGFEE", "AvgRTC", "Date"))
),
mainPanel(
verbatimTextOutput(outputId = "RegSum"),
verbatimTextOutput(outputId = "IndPrint"),
verbatimTextOutput(outputId = "DepPrint")
#plotOutput("hist")
)
)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
RegData
runApp('C:/Users/ambatipudir/Desktop/ui.R')
library(shiny)
library(data.table)
RegData <- as.data.table(read.csv("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = TRUE))
ui <- fluidPage(
headerPanel("Compensation Analysis using Oaxaca Decomposition"),
sidebarPanel(
p("Select the input parameters on which the compensation must depend"),
selectInput(inputId = "DependentVariable", label = "Dependent Variables", multiple = TRUE, choices = c('(Intercept)',
'perfEval',
'age_bin',
'eduHigh School',
'eduMasters',
'eduPhD',
'deptEngineering',
'deptManagement',
'deptOperations',
'deptSales',
'seniority',
'jobTitleDriver',
'jobTitleFinancial Analyst',
'jobTitleGraphic Designer',
'jobTitleIT',
'jobTitleManager',
'jobTitleMarketing Associate',
'jobTitleSales Associate',
'jobTitleSoftware Engineer',
'jobTitleWarehouse Associate')),
p("Select the inputs paramter for finding which of the compensation"),
selectInput(inputId = "IndependentVariable", label = "Independent Variables", multiple = FALSE, choices = c('log_base', 'log_total'))
),
mainPanel(
verbatimTextOutput(outputId = "RegSum"),
verbatimTextOutput(outputId = "IndPrint"),
verbatimTextOutput(outputId = "DepPrint"),
plotOutput("ggplot2")
)
)
server <- function(input, output) {
lm1 <- reactive({lm(reformulate(input$DependentVariable, input$IndependentVariable), data = RegData)})
output$DepPrint <- renderPrint({input$DependentVariable})
output$IndPrint <- renderPrint({input$IndependentVariable})
output$RegSum <- renderPrint({summary(lm1())})
}
shinyApp(ui = ui, server = server)
lm1 <- reactive({oaxaca(reformulate(input$DependentVariable, input$IndependentVariable), data = RegData)})
library(oaxaca)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
output$plot <- renderPlot(plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = FALSE))
output$plot <- renderPlot(plot.oaxaca(model1, decomposition = "twofold", group.weight = -1,
unexplained.split = FALSE))
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
str(RegData)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
RegData
RegData <- RegData$basePay + RegData$bonus
runApp('C:/Users/ambatipudir/Desktop/ui.R')
RegData
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
input$IndependentVariable
runApp('C:/Users/ambatipudir/Desktop/ui.R')
str(RegData)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
library(plotly)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
library(plotdata)
install.packages('plotdata')
library(plotdata)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
create_df
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
library(shiny); runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
install.packages("plotData")
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
nearPoints --help
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
library(plotly)
library(plotly)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
oaxacamodel
oaxacamodel <- oaxaca(input$IndependentVariable ~ input$DependentVariable | male, data = RegData)
RegData <- as.data.table(read.csv("C:\\Users\\ambatipudir\\Downloads\\data_r.csv", header = TRUE, stringsAsFactors = TRUE))
RegData$totalPay <- RegData$basePay + RegData$bonus
RegData$average <- RegData$age + RegData$perfEval + RegData$seniority
oaxacamodel <- oaxaca(input$IndependentVariable ~ input$DependentVariable | male, data = RegData)
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
runApp('C:/Users/ambatipudir/Desktop/ui.R')
