# -*- coding: utf-8 -*-
"""Based on R code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XlHUA3T9Z46UIkMP2fmHJ4KRGuqttHYd
"""

import io
import pandas as pd
import numpy as np
from google.colab import files
import statsmodels.api as sm
import statsmodels.formula.api as smf
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from statsmodels.graphics.api import abline_plot
from sklearn.metrics import roc_curve

uploaded = files.upload()

df = pd.read_csv(io.BytesIO(uploaded.get('data_r.csv')))
df

df['age_bin'] = pd.cut(df['age'], 5, labels=[1,2,3,4,5])
df

df['Total_Compensation'] = df['basePay'] + df['bonus']
# df

df['log_basePay'] = np.log10(df['basePay'])
df['log_bonus'] = np.log10(df['bonus'])
df['log_total_compensation'] = np.log10(df['Total_Compensation'])
# df

df['male'] = df['gender'].map({"Female":0,"Male":1})
# df

df['jobTitle'] = df['jobTitle'].astype('category')
df['edu'] = df['edu'].astype('category')
df['dept'] = df['dept'].astype('category')
df.info()

df.describe()

df_train, df_test = train_test_split(df, test_size=0.25, random_state=42)

formula1 = 'Total_Compensation ~ male'
logm1 = smf.glm(formula=formula1, data = df_train, family=sm.families.Binomial()).fit()
logm1.summary()

formula2 = 'Total_Compensation ~ male + age_bin + perfEval + edu'
logm2 = smf.glm(formula=formula2, data = df_train, family=sm.families.Binomial()).fit()
logm2.summary()

formula3 = 'Total_Compensation ~ male + age_bin + perfEval + edu + dept + jobTitle + seniority'
logm3 = smf.glm(formula=formula3, data = df_train, family=sm.families.Binomial()).fit()
logm3.summary()